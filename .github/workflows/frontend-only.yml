name: frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'index.html'
      - '*.css'
      - '*.js'
      - 'firebase.json'
      - 'CNAME'
      - 'src/**'
  workflow_dispatch:

env:
  PROJECT_ID: kinggrouptech-93908
  FRONTEND_URL: https://kinggrouptech.com
  FIREBASE_URL: https://kinggrouptech-93908.web.app

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js with Cache
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Firebase CLI with Cache
      run: |
        npm install -g firebase-tools
        
    - name: ☁️ Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        
    - name: 🔐 Authenticate Firebase
      run: |
        echo '${{ secrets.GCP_SA_KEY }}' > /tmp/gcp-key.json
        gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
        gcloud config set project ${{ env.PROJECT_ID }}
        firebase use ${{ env.PROJECT_ID }} --token "$(gcloud auth print-access-token)"
        
    - name: 🧪 Frontend Validation Tests
      run: |
        echo "🔍 Testing frontend files..."
        
        # Verificar arquivos essenciais
        [ -f "index.html" ] && echo "✅ index.html found" || { echo "❌ index.html missing"; exit 1; }
        [ -f "firebase.json" ] && echo "✅ firebase.json found" || { echo "❌ firebase.json missing"; exit 1; }
        
        # Verificar estrutura HTML
        grep -q "<title>" index.html && echo "✅ HTML title found"
        grep -q "KingGroup" index.html && echo "✅ KingGroup branding found"
        
        # Listar todos os assets
        echo "📁 Frontend assets:"
        ls -la *.html *.css *.js 2>/dev/null || echo "📁 Basic files only"
        
        echo "✅ Frontend validation completed"
        
    - name: 🔍 Pre-Deploy Configuration Check
      run: |
        echo "🔍 Checking Firebase configuration..."
        if [ -f "firebase.json" ]; then
          echo "✅ firebase.json found"
          cat firebase.json | jq . > /dev/null && echo "✅ Valid JSON format" || echo "⚠️ JSON format warning"
        fi
        
        # Verificar CNAME se existir
        if [ -f "CNAME" ]; then
          echo "✅ CNAME found: $(cat CNAME)"
        fi
        
    - name: 🚀 Deploy to Firebase Hosting
      run: |
        echo "🚀 Starting deployment to Firebase Hosting..."
        firebase deploy --only hosting --token "$(gcloud auth print-access-token)" --force
        echo "✅ Frontend deployment completed"
        
    - name: 🔍 Post-Deploy Health Check
      run: |
        echo "🔍 Performing frontend health check..."
        sleep 15  # Wait for deployment to propagate
        
        # Test Firebase URL
        curl -f ${{ env.FIREBASE_URL }} && echo "✅ Firebase URL accessible" || echo "⚠️ Firebase URL check failed"
        
        # Test custom domain if configured
        curl -f ${{ env.FRONTEND_URL }} && echo "✅ Custom domain accessible" || echo "⚠️ Custom domain check failed"
        
    - name: 🧹 Cleanup
      if: always()
      run: |
        rm -f /tmp/gcp-key.json
        
    - name: ✅ Frontend Deployment Success
      run: |
        echo "🎉 Frontend deployed successfully!"
        echo "🌐 Website: ${{ env.FRONTEND_URL }}"
        echo "🔥 Firebase: ${{ env.FIREBASE_URL }}"
        echo "📅 Deployed at: $(date)"
        echo "🎯 Ready for production traffic!"

